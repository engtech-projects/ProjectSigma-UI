import{b as e,c as r}from"./CustomFetch.ggXvTdIz.js";import{l as o}from"./entry.32UGFqj-.js";const n=o("SalaryDisbursement",{state:()=>({isEdit:!1,generateDraftRequest:{isLoading:!1,data:{payroll_date:"",payroll_type:"",release_type:"",approvals:[]},errorMessage:"",successMessage:""},createRequestData:{isLoading:!1,data:{},errorMessage:"",successMessage:""},allRequests:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{},errorMessage:"",successMessage:""},myApprovals:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{},errorMessage:"",successMessage:""},myRequests:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{},errorMessage:"",successMessage:""},payslipReadyRecords:{isLoading:!1,isLoaded:!1,list:[],params:{payroll_date:null},pagination:{},errorMessage:"",successMessage:""}}),actions:{async getOne(a){return await e("/api/salary-disbursement/resource/"+a,{method:"GET",onResponse:({response:s})=>{if(s.ok)return s._data.data;throw new Error(s._data.message)}})},async getAllRequests(){this.allRequests.isLoaded=!0,await r("/api/salary-disbursement/resource",{method:"GET",params:this.allRequests.params,watch:!1,onRequest:()=>{this.allRequests.isLoading=!0},onResponse:({response:a})=>{this.allRequests.isLoading=!1,a.ok&&(this.allRequests.list=a._data.data,this.allRequests.pagination={first_page:a._data.links.first,pages:a._data.meta.links,last_page:a._data.links.last})}})},async getMyRequests(){this.myRequests.isLoaded=!0,await r("/api/salary-disbursement/my-requests",{method:"GET",params:this.myRequests.params,watch:!1,onRequest:()=>{this.myRequests.isLoading=!0},onResponse:({response:a})=>{if(this.myRequests.isLoading=!1,a.ok)this.myRequests.list=a._data.data,this.myRequests.pagination={first_page:a._data.links.first,pages:a._data.meta.links,last_page:a._data.links.last};else throw this.myRequests.errorMessage=a._data.message,new Error(a._data.message)}})},async getMyApprovals(){this.myApprovals.isLoaded=!0,await r("/api/salary-disbursement/my-approvals",{method:"GET",params:this.myApprovals.params,watch:!1,onRequest:()=>{this.myApprovals.isLoading=!0},onResponse:({response:a})=>{if(this.myApprovals.isLoading=!1,a.ok)this.myApprovals.list=a._data.data,this.myApprovals.successMessage=a._data.message,this.myApprovals.pagination={first_page:a._data.links.first,pages:a._data.meta.links,last_page:a._data.links.last};else throw this.myApprovals.errorMessage=a._data.message,new Error(a._data.message)}})},async getPayslipReadyRecords(){this.payslipReadyRecords.isLoaded=!0,await r("/api/salary-disbursement/payslip-ready",{method:"GET",params:this.payslipReadyRecords.params,watch:!1,onRequest:()=>{this.payslipReadyRecords.isLoading=!0},onResponse:({response:a})=>{if(this.payslipReadyRecords.isLoading=!1,a.ok)this.payslipReadyRecords.list=a._data.data,this.payslipReadyRecords.successMessage=a._data.message,this.payslipReadyRecords.pagination={first_page:a._data.links.first,pages:a._data.meta.links,last_page:a._data.links.last};else throw this.payslipReadyRecords.errorMessage=a._data.message,new Error(a._data.message)}})},async getOnePayslipReady(a){return await e("/api/salary-disbursement/payslip-ready/"+a,{method:"GET",onResponse:({response:s})=>{if(s.ok)return s._data.data;throw new Error(s._data.message)}})},async generateDraft(){await e("/api/salary-disbursement/draft",{method:"POST",body:this.generateDraftRequest.data,onRequest:()=>{this.generateDraftRequest.isLoading=!0},onResponse:({response:a})=>{if(this.generateDraftRequest.isLoading=!1,a.ok)this.createRequestData.data=a._data.data,this.generateDraftRequest.successMessage=a._data.message;else throw this.generateDraftRequest.errorMessage=a._data.message,new Error(a._data.message)}})},async createRequest(){this.createRequestData.isLoading||await e("/api/salary-disbursement/resource",{method:"POST",body:this.createRequestData.data,onRequest:()=>{this.createRequestData.isLoading=!0},onResponse:({response:a})=>{if(this.createRequestData.isLoading=!1,a.ok)this.reloadResources(),this.createRequestData.successMessage=a._data.message;else throw this.createRequestData.errorMessage=a._data.message,new Error(a._data.message)}})},async deleteRequest(a){return await e("/api/salary-disbursement/resource/"+a,{method:"DELETE",watch:!1,onResponse:({response:s})=>{if(s.ok)return this.reloadResources(),s._data.message}})},async approveApprovalForm(a){await e("/api/approvals/approve/RequestSalaryDisbursement/"+a,{method:"POST",onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{if(s.ok)return this.reloadResources(),s._data;throw new Error(s._data.message)}})},async denyApprovalForm(a,s){const t=new FormData;t.append("id",a),t.append("remarks",s),await e("/api/approvals/disapprove/RequestSalaryDisbursement/"+a,{method:"POST",body:t,onResponseError:({response:i})=>{throw new Error(i._data.message)},onResponse:({response:i})=>{if(i.ok)return this.reloadResources(),i._data}})},async submitToAccounting(a){await e("/api/salary-disbursement/submit-to-accounting/"+a,{method:"POST",onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{if(s.ok)return this.reloadResources(),s._data}})},reloadResources(){const a=this.generateDraftRequest.data.approvals,s=[];this.allRequests.isLoaded&&s.push(this.getAllRequests),this.myRequests.isLoaded&&s.push(this.getMyRequests),this.myApprovals.isLoaded&&s.push(this.getMyApprovals),this.payslipReadyRecords.isLoaded&&s.push(this.getPayslipReadyRecords),this.$reset(),this.generateDraftRequest.data.approvals=a,s.forEach(t=>{t()})}}});export{n as u};
