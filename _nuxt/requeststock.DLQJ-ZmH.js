import{e as t,i}from"./CustomFetch.BRBLzGci.js";import{l as r}from"./entry.R6V7NTxy.js";const R="Requisition Slip",o="Consolidated Request for the month of",l="Recommended Request",d="Special Case of Request",u="N/A",q=[o,l,d,u],f=["January","February","March","April","May","June","July","August","September","October","November","December"],n="Purchase Order",p="Cancelled",h="Purchase Order for MR",m="Petty Cash",_=[n,p,h,m],y=r("requestStockStore",{state:()=>({requestStock:{isLoading:!1,isLoaded:!1,rsDetails:{isLoading:!1,isLoaded:!1,list:[],params:{}},list:[],form:{},items:[],params:{department_id:null,project_id:null},pagination:{}},allRequests:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},myApprovals:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},myRequests:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},approvalList:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{},errorMessage:"",successMessage:""},errorMessage:"",successMessage:"",remarks:""}),actions:{async getAllRequests(){await t("/api/request-requisition-slip/all-request",{method:"GET",params:this.allRequests.params,onRequest:()=>{this.allRequests.isLoading=!0},onResponse:({response:s})=>{this.allRequests.isLoading=!1,s.ok&&(this.allRequests.list=s._data.data,this.allRequests.pagination={first_page:s._data.links.first,pages:s._data.meta.links,last_page:s._data.links.last},this.allRequests.isLoaded=!0)}})},async getMyRequests(){await t("/api/request-requisition-slip/my-request",{method:"GET",params:this.myRequests.params,onRequest:()=>{this.myRequests.isLoading=!0},onResponse:({response:s})=>{if(this.myRequests.isLoading=!1,s.ok)this.myRequests.isLoaded=!0,this.myRequests.list=s._data.data,this.myRequests.pagination={first_page:s._data.links.first,pages:s._data.meta.links,last_page:s._data.links.last};else throw new Error(s._data.message)}})},async getMyApprovals(){await t("/api/request-requisition-slip/my-approvals",{method:"GET",params:this.myApprovals.params,onRequest:()=>{this.myApprovals.isLoading=!0},onResponse:({response:s})=>{if(this.myApprovals.isLoading=!1,s.ok)this.myApprovals.isLoaded=!0,this.myApprovals.list=s._data.data,this.myApprovals.pagination={first_page:s._data.links.first,pages:s._data.meta.links,last_page:s._data.links.last};else throw new Error(s._data.message)}})},async fetchRs(){await t("/api/request-requisition-slip/resource",{method:"GET",params:this.requestStock.params,onRequest:()=>{this.requestStock.isLoading=!0},onResponse:({response:s})=>{if(this.requestStock.isLoading=!1,s.ok)this.requestStock.list=s._data.data;else throw this.errorMessage=s._data.message,new Error(s._data.message)}})},async fetchRsDetails(s){await t("/api/rs/overview/"+s,{method:"GET",watch:!1,onRequest:()=>{this.requestStock.isLoading=!0},onResponse:({response:a})=>{if(this.requestStock.isLoading=!1,a.ok)this.requestStock.details=a._data.data;else throw this.errorMessage=a._data.message,new Error(a._data.message)}})},async storeRequest(){await i("/api/request-requisition-slip/resource",{method:"POST",body:{...this.requestStock.form,details:this.requestStock.details},watch:!1,onResponse:({response:s})=>{if(s.ok)this.reloadResources(),this.successMessage=s._data.message;else throw this.errorMessage=s._data.message,new Error(s._data.message)}})},async getOne(s){return await i("/api/request-requisition-slip/resource/"+s,{method:"GET",params:this.requestStock.params,onResponse:({response:a})=>{if(a.ok)return this.requestStock.details=a._data.data,a._data.data;throw new Error(a._data.message)}})},async approveApprovalForm(s){this.successMessage="",this.errorMessage="",await t("/api/approvals/approve/RequestRequisitionSlip/"+s,{method:"POST",onResponseError:({response:a})=>{throw this.errorMessage=a._data.message,new Error(a._data.message)},onResponse:({response:a})=>{if(a.ok)return this.successMessage=a._data.message,a._data}})},async denyApprovalForm(s){this.successMessage="",this.errorMessage="";const a=new FormData;a.append("id",s),a.append("remarks",this.remarks),await t("/api/approvals/disapprove/RequestRequisitionSlip/"+s,{method:"POST",body:a,onResponseError:({response:e})=>{throw this.errorMessage=e._data.message,new Error(e._data.message)},onResponse:({response:e})=>{if(e.ok)return this.successMessage=e._data.message,e._data}})},clearMessages(){this.errorMessage="",this.successMessage=""},reloadResources(){const s=this.approvalList.list,a=[];this.allRequests.isLoaded&&a.push(this.getAllRequests),this.myRequests.isLoaded&&a.push(this.getMyRequests),this.myApprovals.isLoaded&&a.push(this.getMyApprovals),this.$reset(),this.approvalList.list=s,a.forEach(e=>{e()})}}});export{R as A,f as M,_ as R,q as T,y as u};
