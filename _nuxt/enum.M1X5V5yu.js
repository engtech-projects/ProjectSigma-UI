import{b as s}from"./CustomFetch.ggXvTdIz.js";import{l as E}from"./entry.32UGFqj-.js";const y=E("enums",{state:()=>({positionEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},successMessage:"",errorMessage:""},departmentEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},successMessage:"",errorMessage:""},leaveEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},successMessage:"",errorMessage:""},projectEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},localFilter:{project_code:""},successMessage:"",errorMessage:""},salarygradeEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},successMessage:"",errorMessage:""},userEmployeeEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},successMessage:"",errorMessage:""},userEmployeeHeadsEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},successMessage:"",errorMessage:""},approvalHeadEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},successMessage:"",errorMessage:""},approvalUserEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},successMessage:"",errorMessage:""},allEmployeeEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},localFilters:{multi:{filterType:"",filterData:""},atm:"",name:""},successMessage:"",errorMessage:""}}),getters:{filteredEmployeesList(e){return e.allEmployeeEnum.list.filter(a=>{var r,t,o,l,i,m,n,p;return a.fullname_last.toLowerCase().includes(e.allEmployeeEnum.localFilters.name.toLowerCase())&&(!e.allEmployeeEnum.localFilters.multi.filterType||e.allEmployeeEnum.localFilters.multi.filterType==="Department"&&(!e.allEmployeeEnum.localFilters.multi.filterData||((r=a.department)==null?void 0:r.id)===e.allEmployeeEnum.localFilters.multi.filterData)||e.allEmployeeEnum.localFilters.multi.filterType==="Project"&&(!e.allEmployeeEnum.localFilters.multi.filterData||((o=(t=a.current_employment)==null?void 0:t.projects)==null?void 0:o.some(u=>u.id===e.allEmployeeEnum.localFilters.multi.filterData)))||e.allEmployeeEnum.localFilters.multi.filterType==="SalaryType"&&(!e.allEmployeeEnum.localFilters.multi.filterData||((l=a.current_employment)==null?void 0:l.salary_type)===e.allEmployeeEnum.localFilters.multi.filterData||e.allEmployeeEnum.localFilters.multi.filterData==="Monthly"&&((i=a.current_employment)==null?void 0:i.salary_type)==="Fixed"))&&(!e.allEmployeeEnum.localFilters.atm||e.allEmployeeEnum.localFilters.atm==="Yes"&&((m=a.company_employments)==null?void 0:m.atm)&&((n=a.company_employments)==null?void 0:n.atm.toLowerCase())!=="n/a"||e.allEmployeeEnum.localFilters.atm==="No"&&(!a.company_employments.atm||((p=a.company_employments)==null?void 0:p.atm.toLowerCase())==="n/a"))})},headByPosition(e){return a=>e.userEmployeeHeadsEnum.list.find(r=>r.employee.current_position===a)},filteredProjectsList(e){return e.projectEnum.list.filter(a=>a.project_code.toLowerCase().includes(e.projectEnum.localFilter.project_code.toLowerCase()))}},actions:{async getPositionEnums(){this.positionEnum.isLoaded=!0,await s("/api/position/list",{method:"GET",params:this.positionEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.positionEnum.list=e._data.data??[])}})},async getDepartmentEnums(){this.departmentEnum.isLoaded=!0,await s("/api/department/list",{method:"GET",params:this.departmentEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.departmentEnum.list=e._data.data??[])}})},async getLeaveEnums(){this.leaveEnum.isLoaded=!0,await s("/api/leave/list",{method:"GET",params:this.leaveEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.leaveEnum.list=e._data.data??[])}})},async getProjectEnums(){this.projectEnum.isLoaded=!0,await s("/api/project-monitoring/list",{method:"GET",params:this.projectEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.projectEnum.list=e._data.data??[])}})},async getSalarygradeEnums(){this.salarygradeEnum.isLoaded=!0,await s("/api/salary/list",{method:"GET",params:this.salarygradeEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.salarygradeEnum.list=e._data.data??[])}})},async getUserEmployeeEnums(){this.userEmployeeEnum.isLoaded=!0,await s("/api/employee/users-list",{method:"GET",params:this.userEmployeeEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.userEmployeeEnum.list=e._data.data??[])}})},async getUserEmployeeHeadsEnums(){this.userEmployeeHeadsEnum.isLoaded=!0,await s("/api/enums/employee-heads",{method:"GET",params:this.userEmployeeHeadsEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.userEmployeeHeadsEnum.list=e._data.data??[])}})},async getApprovalUserEnums(){this.approvalUserEnum.isLoaded=!0,await s("/api/enums/approval-users",{method:"GET",params:this.approvalUserEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.approvalUserEnum.list=e._data.data??[])}})},async getApprovalHeadEnums(){this.approvalHeadEnum.isLoaded=!0,await s("/api/enums/approval-heads",{method:"GET",params:this.approvalHeadEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.approvalHeadEnum.list=e._data.data??[])}})},async getEmployeeEnum(){this.allEmployeeEnum.isLoaded=!0,await s("/api/employee/list",{method:"GET",params:this.allEmployeeEnum.localFilters.multi,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.allEmployeeEnum.list=e._data.data??[])}})}}});export{y as u};
