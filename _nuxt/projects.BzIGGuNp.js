import{d as e,b as r,c as n}from"./CustomFetch.BRBLzGci.js";import{l}from"./entry.R6V7NTxy.js";var o=(a=>(a.ALL="all",a.DRAFT="draft",a.PROPOSAL="proposal",a.BIDDING="bidding",a.AWARDED="awarded",a.COMPLETED="completed",a.ON_HOLD="on-hold",a.MY_PROJECTS="myProjects",a.ARCHIVED="archived",a))(o||{});const g=l("projects",{state:()=>({isEdit:!1,viewState:!1,information:{isLoading:!1,id:null,uuid:null,position:null,position_id:null,employee_id:null,parent_project_id:null,contract_id:null,code:null,stage:null,name:null,amount:null,location:null,contract_date:null,duration:null,nature_of_work:null,implementing_office:null,noa_date:null,ntp_date:null,license:null,designator:null,phases:[],employees:[],approvals:[]},list:[],myProjectList:{isLoading:!1,isLoaded:!1,list:[],params:{project_key:""},pagination:{},errorMessage:"",successMessage:""},draftList:{isLoading:!1,isLoaded:!1,list:[],params:{stage_status:o.DRAFT},pagination:{},errorMessage:"",successMessage:""},proposalList:{isLoading:!1,isLoaded:!1,list:[],params:{stage_status:o.PROPOSAL},pagination:{},errorMessage:"",successMessage:""},biddingList:{isLoading:!1,isLoaded:!1,list:[],params:{stage_status:o.BIDDING},pagination:{},errorMessage:"",successMessage:""},onHoldList:{isLoading:!1,isLoaded:!1,list:[],params:{stage_status:o.ON_HOLD},pagination:{},errorMessage:"",successMessage:""},awardedList:{isLoading:!1,isLoaded:!1,list:[],params:{stage_status:o.AWARDED},pagination:{},errorMessage:"",successMessage:""},projectTssList:{isLoading:!1,isLoaded:!1,list:[],params:{project_key:"",stage_status:o.AWARDED},pagination:{},errorMessage:"",successMessage:""},archivedList:{isLoading:!1,isLoaded:!1,list:[],params:{stage_status:o.ARCHIVED},pagination:{},errorMessage:"",successMessage:""},activeList:{isLoading:!1,isLoaded:!1,list:[],params:{status:"Scheduled",stage_status:o.AWARDED},pagination:{},errorMessage:"",successMessage:""},cashFlowByQuarter:{cash_flow:{q1:{accomplishment:null,cash_flow:null,cumulative_accomplishment:null,cumulative_cash_flow:null},q2:{accomplishment:null,cash_flow:null,cumulative_accomplishment:null,cumulative_cash_flow:null},q3:{accomplishment:null,cash_flow:null,cumulative_accomplishment:null,cumulative_cash_flow:null},q4:{accomplishment:null,cash_flow:null,cumulative_accomplishment:null,cumulative_cash_flow:null}}},pagination:{},getParams:{},errorMessage:"",successMessage:"",isLoading:{create:!1,list:!1},attachments:{form:{attachment_name:"",other_type:"",file:null},list:[]},viewAttachments:{url:""}}),actions:{async getProjectsInformation(a){this.isLoading.list=!0;const{data:t,error:s}=await e("/api/projects/resource/"+a,{method:"GET",params:this.getParams,onResponse:({response:i})=>{i.ok&&(this.information=i._data.data)}});if(t)return t;if(s)return s},async getDraftProjects(){this.draftList.isLoading=!0,this.draftList.params={stage_status:o.DRAFT};const{data:a,error:t}=await e("/api/projects/resource",{method:"GET",params:this.draftList.params,onRequest:()=>{this.draftList.isLoading=!0},onResponse:({response:s})=>{this.draftList.isLoading=!1,s.ok&&(this.draftList.list=s._data.data,this.draftList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last})}});if(a)return a;if(t)return t},async getProposalProjects(){this.proposalList.isLoading=!0;const{data:a,error:t}=await e("/api/projects/resource",{method:"GET",params:this.proposalList.params,onRequest:()=>{this.proposalList.isLoading=!0},onResponse:({response:s})=>{this.proposalList.isLoading=!1,s.ok&&(this.proposalList.list=s._data.data,this.proposalList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last})}});if(a)return a;if(t)return t},async getBiddingProjects(){this.biddingList.isLoading=!0;const{data:a,error:t}=await e("/api/projects/resource",{method:"GET",params:this.biddingList.params,onRequest:()=>{this.biddingList.isLoading=!0},onResponse:({response:s})=>{this.biddingList.isLoading=!1,s.ok&&(this.biddingList.list=s._data.data,this.biddingList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last})}});if(a)return a;if(t)return t},async getOnHoldProjects(){this.onHoldList.isLoading=!0;const{data:a,error:t}=await e("/api/projects/resource",{method:"GET",params:this.onHoldList.params,onRequest:()=>{this.onHoldList.isLoading=!0},onResponse:({response:s})=>{this.onHoldList.isLoading=!1,s.ok&&(this.onHoldList.list=s._data.data,this.onHoldList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last})}});if(a)return a;if(t)return t},async getAwardedProjects(){this.awardedList.isLoading=!0;const{data:a,error:t}=await e("/api/projects/resource",{method:"GET",params:this.awardedList.params,onRequest:()=>{this.awardedList.isLoading=!0},onResponse:({response:s})=>{this.awardedList.isLoading=!1,s.ok&&(this.awardedList.list=s._data.data,this.awardedList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last})}});if(a)return a;if(t)return t},async getProjectTss(){const{data:a,error:t}=await e("/api/projects/tss",{method:"GET",params:this.projectTssList.params,onRequest:()=>{this.projectTssList.isLoading=!0},onResponse:({response:s})=>{this.projectTssList.isLoading=!1,s.ok&&(this.projectTssList.list=s._data.data,this.projectTssList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last})}});if(a)return a;if(t)return t},async getArchivedProjects(){this.archivedList.isLoading=!0;const{data:a,error:t}=await e("/api/projects/resource",{method:"GET",params:this.archivedList.params,onRequest:()=>{this.archivedList.isLoading=!0},onResponse:({response:s})=>{this.archivedList.isLoading=!1,s.ok&&(this.archivedList.list=s._data.data,this.archivedList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last})}});if(a)return a;if(t)return t},async getActiveProjects(){this.activeList.isLoading=!0;const{data:a,error:t}=await e("/api/projects/resource",{method:"GET",params:this.activeList.params,onRequest:()=>{this.activeList.isLoading=!0},onResponse:({response:s})=>{this.activeList.isLoading=!1,s.ok&&(this.activeList.list=s._data.data,this.activeList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last})}});if(a)return a;if(t)return t},async getMyProjects(){this.myProjectList.isLoading=!0;const{data:a,error:t}=await e("/api/projects/owned",{method:"GET",params:this.myProjectList.params,onRequest:()=>{this.myProjectList.isLoading=!0},onResponse:({response:s})=>{this.myProjectList.isLoading=!1,s.ok&&(this.myProjectList.list=s._data.data,this.myProjectList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last})}});if(a)return a;if(t)return t},async getProject(a){this.isLoading.list=!0;const{data:t,error:s}=await e("/api/projects/resource/"+a,{method:"GET",params:this.getParams,onResponse:({response:i})=>{this.isLoading.list=!1,this.information=i._data.data}});if(t)return t;if(s)return s},async createProject(){this.successMessage="",this.errorMessage="",await e("/api/projects/resource",{method:"POST",body:this.information,watch:!1,onResponse:({response:a})=>{a.ok?(this.$reset(),this.getMyProjects(),this.successMessage=a._data.message):this.errorMessage=a._data.message}})},async viewProjectRevisions(a){await e(`/api/project-revisions/revisions/${a}`,{method:"GET",onRequest:()=>{this.isLoading.list=!0},onResponse:({response:t})=>{this.isLoading.list=!1,t.ok&&(this.information=t._data.data.data)}})},async publishProposal(a){this.successMessage="",this.errorMessage="",await e("/api/project-revisions/change-to-proposal",{method:"POST",body:{id:a},watch:!1,onResponse:({response:t})=>{t.ok?(this.getMyProjects(),this.successMessage=t._data.message):this.errorMessage=t._data.message}})},clearMessages(){this.errorMessage="",this.successMessage=""},async editProject(){this.successMessage="",this.errorMessage="";const{data:a,error:t}=await e("/api/projects/resource/"+this.information.id,{method:"PATCH",body:this.information,watch:!1});if(a.value)return this.successMessage=a.value.message,a;if(t.value)return this.errorMessage=t.value.data.message,t},async editRates(a){this.successMessage="",this.errorMessage="";const{data:t,error:s}=await e("/api/projects/change-summary-rates",{method:"POST",body:a,watch:!1});if(t.value)return this.getProject(this.information.id),this.successMessage=t.value.message,t;if(s.value)return this.errorMessage=s.value.data.message,s},async deleteProject(a){const{data:t,error:s}=await e("/api/projects/"+a,{method:"DELETE",watch:!1,onResponse:({response:i})=>{this.successMessage=i._data.message}});if(t.value)return this.getMyProjects(),this.successMessage=t.value.message,t;if(s.value)return this.errorMessage=s.value.data.message,s},async projectMemberList(a){this.successMessage="",this.errorMessage="",await r("api/project-monitoring/project-member-list/"+a,{method:"GET",onResponse:({response:t})=>{t.ok&&(this.information.employees=t._data.data)}})},async attachEmployee(a,t){this.successMessage="",this.errorMessage="",await n(`/api/project-monitoring/attach-employee/${a}`,{method:"PUT",body:{employee_id:t},watch:!1,onResponseError:({response:s})=>{throw this.errorMessage=s._data.message||"Failed to attach employee.",new Error(s._data.message)},onResponse:({response:s})=>{s.ok&&(this.getProjectsInformation(a),this.projectMemberList(a),this.successMessage=s._data.message||"Employee attached successfully.")}})},async updateProjectStage(a,t){this.successMessage="",this.errorMessage="",this.information.isLoading=!0,await e(`api/projects/${a}/update-stage`,{method:"PATCH",body:{stage:t},watch:!1,onResponseError:({response:s})=>{throw this.information.isLoading=!1,this.errorMessage=s._data.message||"Failed to update project stage.",new Error(s._data.message)},onResponse:({response:s})=>{this.information.isLoading=!1,s.ok&&(this.getProjectsInformation(a),t==="generate_to_tss"&&(this.viewState=!0),this.successMessage=s._data.message||"Project stage updated successfully.")}})},async updateCashFlow(){this.successMessage="",this.errorMessage="",await e(`api/projects/${this.information.id}/cash-flow`,{method:"PATCH",body:this.cashFlowByQuarter,watch:!1,onResponseError:({response:a})=>{throw this.errorMessage=a._data.message||"Failed to update project stage.",new Error(a._data.message)},onResponse:({response:a})=>{a.ok&&(this.getProjectsInformation(this.information.id),this.successMessage=a._data.message||"Cash flow updated successfully.")}})},async uploadAttachments(a,t){this.successMessage="",this.errorMessage="",await e("/api/projects/"+a+"/attachments",{method:"POST",body:t,onResponseError:({response:s})=>{var i;this.errorMessage=((i=s._data)==null?void 0:i.message)||"Failed to upload attachments."},onResponse:({response:s})=>{var i;s.ok&&(this.successMessage=((i=s._data)==null?void 0:i.message)||"Attachments uploaded successfully.")}})},async viewAttachments(a){this.errorMessage="",this.successMessage="",await e(`/api/projects/${a}/document-viewer`,{method:"GET",onResponseError:({response:t})=>{var s;this.errorMessage=((s=t._data)==null?void 0:s.message)||"Unable to get viewer link"},onResponse:({response:t})=>{t.ok&&(this.viewAttachments.url=t._data.url)}})}}});export{o as P,g as u};
