import{a as t}from"./CustomFetch.ggXvTdIz.js";import{l as r}from"./entry.32UGFqj-.js";const d=r("transactionFlowStore",{state:()=>({TransactionFlowList:[],selectedId:null,status:"done",errorMessage:null,successMessage:null,isLoading:!1}),actions:{async getTransactionFlow(){this.successMessage="",this.errorMessage="",await t("/api/transaction-flow-model",{method:"GET",watch:!1,onRequest:()=>{this.isLoading=!0},onResponseError:({response:s})=>{throw this.errorMessage=s._data.message,new Error(s._data.message)},onResponse:({response:s})=>{if(this.isLoading=!1,s.ok)this.TransactionFlowList=s._data.data,this.successMessage=s._data.message;else throw this.errorMessage=s._data.message,new Error(s._data.message)}})},async updateTransactionFlow(s){this.successMessage="",this.errorMessage="",await t("/api/update-transaction-flow",{method:"POST",body:{user_id:this.selectedId,flow_id:s,update_type:"user"},watch:!1,onRequest:()=>{this.isLoading=!0},onResponseError:({response:a})=>{throw this.errorMessage=a._data.message,new Error(a._data.message)},onResponse:({response:a})=>{if(this.isLoading=!1,a.ok)return this.successMessage=a._data.message,this.selectedId=null,a;throw this.errorMessage=a._data.message,new Error(a._data.message)}})},async updateTransactionFlowStatus(s,a){this.successMessage="",this.errorMessage="",await t("/api/update-transaction-flow",{method:"POST",body:{flow_id:s,status:this.status,update_type:"status",user_id:a},watch:!1,onRequest:()=>{this.isLoading=!0},onResponseError:({response:e})=>{throw this.errorMessage=e._data.message,new Error(e._data.message)},onResponse:({response:e})=>{if(this.isLoading=!1,e.ok)return this.successMessage=e._data.message,this.selectedId=null,e;throw this.errorMessage=e._data.message,new Error(e._data.message)}})}}});export{d as u};
