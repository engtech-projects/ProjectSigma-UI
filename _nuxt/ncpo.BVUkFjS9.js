import{e as t,i}from"./CustomFetch.ggXvTdIz.js";import{l as o}from"./entry.32UGFqj-.js";const l="NCPO",p=o("ncpoStore",{state:()=>({ncpoRequest:{isLoading:!1,isLoaded:!1,details:{isLoading:!1,isLoaded:!1,list:[],params:{}},list:[],form:{},items:[],params:{project_id:null},pagination:{}},allRequests:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},myApprovals:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},myRequests:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},approvalList:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{},errorMessage:"",successMessage:""},errorMessage:"",successMessage:"",remarks:""}),actions:{async getAllRequests(){await t("/api/procurement/ncpo/all-request",{method:"GET",params:this.allRequests.params,onRequest:()=>{this.allRequests.isLoading=!0},onResponse:({response:a})=>{this.allRequests.isLoading=!1,a.ok&&(this.allRequests.list=a._data.data.data,this.allRequests.pagination={first_page:a._data.data.links.first,pages:a._data.data.meta.links,last_page:a._data.data.links.last},this.allRequests.isLoaded=!0)}})},async getMyRequests(){await t("/api/procurement/ncpomy-request",{method:"GET",params:this.myRequests.params,onRequest:()=>{this.myRequests.isLoading=!0},onResponse:({response:a})=>{if(this.myRequests.isLoading=!1,a.ok)this.myRequests.isLoaded=!0,this.myRequests.list=a._data.data.data,this.myRequests.pagination={first_page:a._data.data.links.first,pages:a._data.data.meta.links,last_page:a._data.data.links.last};else throw new Error(a._data.message)}})},async getMyApprovals(){await t("/api/procurement/ncpomy-approvals",{method:"GET",params:this.myApprovals.params,onRequest:()=>{this.myApprovals.isLoading=!0},onResponse:({response:a})=>{if(this.myApprovals.isLoading=!1,a.ok)this.myApprovals.isLoaded=!0,this.myApprovals.list=a._data.data.data,this.myApprovals.pagination={first_page:a._data.data.links.first,pages:a._data.data.meta.links,last_page:a._data.data.links.last};else throw new Error(a._data.message)}})},async fetchRs(){await t("/api/procurement/ncpo/resource",{method:"GET",params:this.ncpoRequest.params,onRequest:()=>{this.ncpoRequest.isLoading=!0},onResponse:({response:a})=>{if(this.ncpoRequest.isLoading=!1,a.ok)this.ncpoRequest.list=a._data.data;else throw this.errorMessage=a._data.message,new Error(a._data.message)}})},async fetchRsDetails(a){await t("/api/rs/overview/"+a,{method:"GET",watch:!1,onRequest:()=>{this.ncpoRequest.isLoading=!0},onResponse:({response:s})=>{if(this.ncpoRequest.isLoading=!1,s.ok)this.ncpoRequest.details=s._data.data;else throw this.errorMessage=s._data.message,new Error(s._data.message)}})},async storeRequest(){await i("/api/procurement/ncpo/resource",{method:"POST",body:{...this.ncpoRequest.form,details:this.ncpoRequest.details},watch:!1,onResponse:({response:a})=>{if(a.ok)this.reloadResources(),this.successMessage=a._data.message;else throw this.errorMessage=a._data.message,new Error(a._data.message)}})},async getOne(a){return await i("/api/procurement/ncpo/resource/"+a,{method:"GET",params:this.ncpoRequest.params,onResponse:({response:s})=>{if(s.ok)return this.ncpoRequest.details=s._data.data,s._data.data;throw new Error(s._data.message)}})},async approveApprovalForm(a){this.successMessage="",this.errorMessage="",await t("/api/approvals/approve/NCPO/"+a,{method:"POST",onResponseError:({response:s})=>{throw this.errorMessage=s._data.message,new Error(s._data.message)},onResponse:({response:s})=>{if(s.ok)return this.successMessage=s._data.message,s._data}})},async denyApprovalForm(a){this.successMessage="",this.errorMessage="";const s=new FormData;s.append("id",a),s.append("remarks",this.remarks),await t("/api/approvals/disapprove/NCPO/"+a,{method:"POST",body:s,onResponseError:({response:e})=>{throw this.errorMessage=e._data.message,new Error(e._data.message)},onResponse:({response:e})=>{if(e.ok)return this.successMessage=e._data.message,e._data}})},clearMessages(){this.errorMessage="",this.successMessage=""},reloadResources(){const a=this.approvalList.list,s=[];this.allRequests.isLoaded&&s.push(this.getAllRequests),this.myRequests.isLoaded&&s.push(this.getMyRequests),this.myApprovals.isLoaded&&s.push(this.getMyApprovals),this.$reset(),this.approvalList.list=a,s.forEach(e=>{e()})}}});export{l as A,p as u};
