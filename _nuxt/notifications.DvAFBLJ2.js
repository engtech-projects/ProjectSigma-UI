import{_ as P}from"./RequestDetails.DPAxYhpH.js";import{_ as C}from"./ApprovalDenyButton.2aaI0auR.js";import{_ as D}from"./PsHoverButton.B5SrmACV.js";import{_ as O}from"./PsModal.Bk3xu63Y.js";import{l as k,n as U,q as N,s as I,r as L,B,o as h,h as H,w as y,b as g,u,c as _,v,j as R,ab as V,O as $}from"./entry.32UGFqj-.js";import{a as w,u as x,A as J}from"./Accessibilities.xGffDRXj.js";import{b as l,c as m}from"./CustomFetch.ggXvTdIz.js";const se=!0,te=!1,ie="Leave",j=k("LeaveRequest",{state:()=>({allList:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},approvalList:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},myRequestList:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},isEdit:!1,payload:{id:"",employee_id:null,charging:"Department",department_id:null,project_id:null,leave_id:"",other_absence:"",date_of_absence_from:"",date_of_absence_to:"",reason_for_absence:"",approvals:"",request_status:"",number_of_days:null,with_pay:!1},createData:{isLoading:!1,errorMessage:"",successMessage:""},pagination:{},getParams:{},errorMessage:"",successMessage:"",remarks:""}),getters:{},actions:{clearMessages(){this.errorMessage="",this.successMessage=""},async createRequest(){if(this.createData.isLoading)return;this.createData.isLoading=!0,this.successMessage="",this.errorMessage="";const e=this.payload.employee_id,s=this.payload.approvals,a=JSON.parse(JSON.stringify(this.payload));a.approvals=JSON.stringify(a.approvals),await l("/api/leave-request/resource",{method:"POST",body:a,onRequest:()=>{this.createData.isLoading=!0},onResponseError:({response:o})=>{this.createData.isLoading=!1,this.errorMessage=o._data.message},onResponse:({response:o})=>{if(this.createData.isLoading=!1,o.ok)return this.$reset(),this.successMessage=o._data.message,this.payload.employee_id=e,this.payload.approvals=s,o._data;throw this.errorMessage=o._data.message,new Error(o._data.message)}})},async getOne(e){return await l("/api/leave-request/resource/"+e,{method:"GET",params:this.getParams,onResponse:({response:s})=>{if(s.ok)return s._data.data;throw new Error(s._data.message)}})},async allLeaves(){await l("/api/leave-request/resource",{method:"GET",params:this.allList.params,onRequest:()=>{this.allList.isLoaded=!0,this.allList.isLoading=!0},onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{this.allList.isLoading=!1,e.ok&&(this.allList.isLoaded=!0,this.allList.list=e._data.data,this.allList.pagination={first_page:e._data.links.first,pages:e._data.meta.links,last_page:e._data.links.last})}})},async myRequest(){await l("/api/leave-request/my-request",{method:"GET",params:this.myRequestList.params,onRequest:()=>{this.myRequestList.isLoaded=!0,this.myRequestList.isLoading=!0},onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{this.myRequestList.isLoading=!1,e.ok&&(this.myRequestList.isLoaded=!0,this.myRequestList.list=e._data.data,this.myRequestList.pagination={first_page:e._data.links.first,pages:e._data.meta.links,last_page:e._data.links.last})}})},async allApprovals(){this.successMessage="",this.errorMessage="",await l("/api/leave-request/my-approvals",{method:"GET",params:this.approvalList.params,onRequest:()=>{this.approvalList.isLoaded=!0,this.approvalList.isLoading=!0},onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{this.approvalList.isLoading=!1,e.ok&&(this.approvalList.isLoaded=!0,this.approvalList.list=e._data.data,this.approvalList.pagination={first_page:e._data.links.first,pages:e._data.meta.links,last_page:e._data.links.last})}})},async approvedRequest(e){this.successMessage="",this.errorMessage="",await l("/api/approvals/approve/LeaveEmployeeRequest/"+e,{method:"POST",onResponse:({response:s})=>{if(s.ok)this.fetchLeaveRequestList(),this.successMessage=s._data.message;else throw this.errorMessage=s._data.message,new Error(s._data.message)}})},async denyRequest(e){this.successMessage="",this.errorMessage="";const s=new FormData;s.append("id",e),s.append("remarks",this.remarks),await l("/api/approvals/disapprove/LeaveEmployeeRequest/"+e,{method:"POST",body:s,onResponse:({response:a})=>{if(a.ok)this.fetchLeaveRequestList(),this.successMessage=a._data.message;else throw this.errorMessage=a._data.message,new Error(a._data.message)}})},async voidRequest(e,s){await l("/api/request-voids/void/LeaveEmployeeRequest/"+e,{method:"POST",params:{reason_for_void:s},onResponseError:({response:a})=>{throw this.errorMessage=a._data.message,new Error(a._data.message)},onResponse:({response:a})=>{if(a.ok)this.fetchLeaveRequestList(),this.successMessage=a._data.message;else throw this.errorMessage=a._data.message,new Error(a._data.message)}})},fetchLeaveRequestList(){this.$reset(),this.allLeaves(),this.allApprovals()}}}),G={key:0,class:"flex gap-2 p-2 justify-end relative"},Y={key:1,class:"flex gap-2 p-2 justify-end relative"},oe={__name:"InfoModal",props:U({data:{type:Object||null,required:!0}},{showModal:{required:!1,type:Boolean}}),emits:["update:showModal"],setup(e){const s=N(e,"showModal"),a=j(),{remarks:o}=I(a),r=L(""),n=B(),d=L(!1),f=()=>{s.value=!1},q=async t=>{try{d.value=!0,await a.approvedRequest(t),n.add({type:"success",text:a.successMessage}),f()}catch(i){n.add({type:"error",text:i||"something went wrong."})}finally{d.value=!1}},E=async t=>{try{d.value=!0,await a.denyRequest(t),n.add({type:"success",text:a.successMessage}),f()}catch(i){n.add({type:"error",text:i||"something went wrong."})}finally{d.value=!1}},M=async t=>{try{d.value=!0,await a.voidRequest(t,r.value),n.add({type:"success",text:a.successMessage})}catch(i){n.add({type:"error",text:i||"something went wrong."})}finally{d.value=!1}};return(t,i)=>{const b=P,A=C,S=D,T=O;return h(),H(T,{"show-modal":s.value,"onUpdate:showModal":i[3]||(i[3]=c=>s.value=c),"is-loading":u(d),title:"LEAVE REQUEST"},{body:y(()=>[g(b,{"leave-data":e.data},null,8,["leave-data"])]),footer:y(()=>{var c;return[e.data.next_approval&&("useCheckIsCurrentUser"in t?t.useCheckIsCurrentUser:u(w))((c=e.data.next_approval)==null?void 0:c.user_id)?(h(),_("div",G,[g(A,{"deny-remarks":u(o),"onUpdate:denyRemarks":i[0]||(i[0]=p=>v(o)?o.value=p:null),"request-id":e.data.id,onApprove:q,onDeny:E},null,8,["deny-remarks","request-id"])])):R("",!0),("useCheckIsCurrentUser"in t?t.useCheckIsCurrentUser:u(w))(e.data.created_by)&&e.data.request_status.toLowerCase()==="approved"&&("useCheckAccessibility"in t?t.useCheckAccessibility:u(x))([("AccessibilityTypes"in t?t.AccessibilityTypes:u(J)).HRMS_REQUEST_VOID_CREATEREQUEST])?(h(),_("div",Y,[g(S,{remarks:u(r),"onUpdate:remarks":i[1]||(i[1]=p=>v(r)?r.value=p:null),"main-button-title":"Void","main-button-color":"bg-red-600","secondary-title":"Are you sure you want to void this leave request?","secondary-button-title":"Submit Void Request","secondary-button-color":"bg-red-600","remarks-title":"Reason for Voiding",onClick:i[2]||(i[2]=p=>M(e.data.id))},null,8,["remarks"])])):R("",!0)]}),_:1},8,["show-modal","is-loading"])}}},Q=$(),{token:F}=V(),re=k("notificationsStore",{state:()=>({allListLoading:!1,allList:[],unreadList:[],unreadListLength:0,streamingList:!1,pagination:{},getParams:{}}),actions:{getAllNotifications(){m("api/notifications/all",{params:this.getParams,onRequest:()=>{this.allListLoading=!0},onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{this.allListLoading=!1,e.ok&&(this.allList=e._data.data??[],this.pagination={first_page:e._data.links.first,pages:e._data.meta.links,last_page:e._data.links.last})}})},async getNotificationsStream(){const s=(await $fetch("/api/notifications/unread-stream",{headers:{Authorization:F.value+""},method:"GET",responseType:"stream",baseURL:Q.public.HRMS_API_URL,keepalive:!0,onResponseError:()=>{this.getNotificationsStream()}})).pipeThrough(new TextDecoderStream).getReader();for(;;)try{const{value:a,done:o}=await s.read();if(o)break;let r=a.trim().split(`
`);r=r[r.length-1].split(": ",2);const n=JSON.parse(r[r.length-1]);this.unreadList=JSON.parse(n.notifications)??[],this.unreadListLength=JSON.parse(n.total_notifications)??[]}finally{this.unreadList=this.unreadList??[]}},async setAllUnreadAsRead(){await m("api/notifications/read-all",{method:"PUT"}),this.loadDatas()},async setSingleNotifAsRead(e){await m("api/notifications/read/"+e,{method:"PUT"}),this.loadDatas()},async setSingleNotifAsUnread(e){await m("api/notifications/unread/"+e,{method:"PUT"}),this.loadDatas()},async loadDatas(){this.allList.length>0&&await this.getAllNotifications()}}});export{ie as E,oe as _,se as a,te as b,re as c,j as u};
