import{u as a}from"./CustomFetch.BRBLzGci.js";import{l as e}from"./entry.R6V7NTxy.js";const o=e("accountingEnums",{state:()=>({test:!0,supplierEnum:{isLoading:!1,isLoaded:!1,list:[],params:{type:"supplier",key:""},successMessage:"",errorMessage:""},payeeEnum:{isLoading:!1,isLoaded:!1,list:[],params:{type:"payee",key:""},successMessage:"",errorMessage:""},employeeEnum:{isLoading:!1,isLoaded:!1,list:[],params:{type:"employee",key:""},successMessage:"",errorMessage:""},usersEnum:{isLoading:!1,isLoaded:!1,list:[],params:{type:"users",key:""},successMessage:"",errorMessage:""},projectsEnum:{isLoading:!1,isLoaded:!1,list:[],params:{type:"project",key:""},successMessage:"",errorMessage:""},departmentEnum:{isLoading:!1,isLoaded:!1,list:[],params:{type:"department",key:""},successMessage:"",errorMessage:""},particularGroupsEnum:{isLoading:!1,isLoaded:!1,list:[],params:{key:""}},journalAccountEnum:{isLoading:!1,isLoaded:!1,list:[],params:{key:""}}}),actions:{async getSupplierEnums(){this.supplierEnum.isLoaded=!0,await a("/api/search-stakeholders",{method:"GET",params:this.supplierEnum.params,onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{s.ok&&(this.supplierEnum.list=s._data.data.data,this.supplierEnum.isLoaded=!0)}})},async getPayeesEnum(){this.payeeEnum.isLoaded=!0,await a("/api/search-stakeholders",{method:"GET",params:this.payeeEnum.params,onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{s.ok&&(this.payeeEnum.list=s._data.data.data,this.payeeEnum.isLoaded=!0)}})},async getEmployeeEnums(){this.employeeEnum.isLoaded=!0,await a("/api/search-stakeholders",{method:"GET",params:this.employeeEnum.params,onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{s.ok&&(this.employeeEnum.list=s._data.data.data,this.employeeEnum.isLoaded=!0)}})},async getProjectsEnums(){this.projectsEnum.isLoaded=!0,await a("/api/search-stakeholders",{method:"GET",params:this.projectsEnum.params,onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{s.ok&&(this.projectsEnum.list=s._data.data.data,this.projectsEnum.isLoaded=!0)}})},async getDepartmentEnums(){this.departmentEnum.isLoaded=!0,await a("/api/search-stakeholders",{method:"GET",params:this.departmentEnum.params,onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{s.ok&&(this.departmentEnum.list=s._data.data.data,this.departmentEnum.isLoaded=!0)}})},async getUsersEnums(){this.usersEnum.isLoaded=!0,await a("/api/search-stakeholders",{method:"GET",params:this.usersEnum.params,onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{s.ok&&(this.usersEnum.list=s._data.data.data,this.usersEnum.isLoaded=!0)}})},async searchParticularGroups(){this.particularGroupsEnum.isLoaded=!0,await a("/api/search-particular-groups",{method:"GET",params:this.particularGroupsEnum.params,onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{s.ok&&(this.particularGroupsEnum.list=s._data.data,this.particularGroupsEnum.isLoaded=!0)}})},async searchJournalAccounts(){this.journalAccountEnum.isLoaded=!0,await a("/api/search-journal-accounts",{method:"GET",params:this.journalAccountEnum.params,onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{s.ok&&(this.journalAccountEnum.list=s._data.data.data,this.journalAccountEnum.isLoaded=!0)}})}}});export{o as u};
