import{e as a,b as t}from"./CustomFetch.ggXvTdIz.js";import{l as r}from"./entry.32UGFqj-.js";const n=r("inventoryEnums",{state:()=>({test:!0,itemGroupEnum:{isLoading:!1,isLoaded:!1,list:[],nameFilter:"",successMessage:"",errorMessage:""},userEmployeeEnum:{list:[],params:{},successMessage:"",errorMessage:""},itemEnum:{list:[],itemGroupFilter:[],params:{},isLoading:!1,isLoaded:!1,successMessage:"",errorMessage:"",localFilter:{item_summary:""}},curentBomEnum:{list:[],itemGroupFilter:[],params:{},isLoading:!1,isLoaded:!1,successMessage:"",errorMessage:""},supplierEnum:{isLoading:!1,isLoaded:!1,list:[],params:{},successMessage:"",errorMessage:""},searchSupplier:{isLoading:!1,isLoaded:!1,list:[],params:{search_key:""},successMessage:"",errorMessage:""}}),getters:{filteredItemList(e){return e.itemEnum.list.filter(s=>`[${s.item_code||""}] ${s.item_summary||""}`.toLowerCase().includes(e.itemEnum.localFilter.item_summary.toLowerCase()))}},actions:{async getItemGroups(){this.itemGroupEnum.isLoaded=!0,await a("/api/item-group/list",{method:"GET",onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.itemGroupEnum.list=e._data.data.map(s=>({id:s.id,name:s.name,sub_groups:s.sub_groups})))}})},async getUserEmployeeEnums(){await t("/api/employee/users-list",{method:"GET",params:this.userEmployeeEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.userEmployeeEnum.list=e._data.data??[])}})},async getItems(){await a("/api/item-profile/search?query=",{method:"GET",params:this.itemEnum.params,onRequest:()=>{this.itemEnum.isLoading=!0},onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{this.itemEnum.isLoading=!1,e.ok&&(this.itemEnum.list=e._data.data??[])}})},async getItemList(){this.itemEnum.isLoading=!0,await a("/api/item-profile/item-list",{method:"GET",params:this.itemEnum.params,onRequest:()=>{this.itemEnum.isLoading=!0},onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{this.itemEnum.isLoading=!1,e.ok&&(this.itemEnum.list=e._data.data??[])}})},async getSupplierEnums(){this.supplierEnum.isLoaded=!0,await a("/api/request-supplier/list",{method:"GET",params:this.supplierEnum.params,onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.supplierEnum.list=e._data.data??[])}})},async getSupplierSearch(){await a("/api/request-supplier/search?search_key=",{method:"GET",params:this.searchSupplier.params,onRequest:()=>{this.searchSupplier.isLoading=!0},onResponseError:({response:e})=>{throw this.searchSupplier.isLoading=!1,new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.searchSupplier.list=e._data.data??[],this.searchSupplier.isLoaded=!0),this.searchSupplier.isLoading=!1}})}}});export{n as u};
