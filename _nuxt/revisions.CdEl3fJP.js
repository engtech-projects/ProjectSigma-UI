import{d as a}from"./CustomFetch.ggXvTdIz.js";import{l as i}from"./entry.32UGFqj-.js";const r=i("revisionStore",{state:()=>({isEdit:!1,viewState:!1,information:{id:null,uuid:null,position:null,position_id:null,employee_id:null,parent_project_id:null,contract_id:null,code:null,name:null,amount:null,location:null,contract_date:null,duration:null,nature_of_work:null,implementing_office:null,noa_date:null,ntp_date:null,license:null,designator:null,phases:[],employees:[],approvals:[]},projectRevisionList:{isLoading:!1,isLoaded:!1,list:[],params:{project_key:""},errorMessage:"",successMessage:""},allRevisionList:{isLoading:!1,isLoaded:!1,list:[],pagination:{},params:{project_key:""},errorMessage:"",successMessage:""},list:[],pagination:{},revisionSelected:null,getParams:{},errorMessage:"",successMessage:"",isLoading:{create:!1,list:!1},attachments:{form:{attachment_name:"",other_type:"",file:null},list:[]}}),actions:{async copyToProjectRevisions(s){await a(`/api/project-revisions/revision/${s}/copy-to-project`,{method:"POST",onRequest:()=>{this.isLoading.list=!0},onResponseError:({response:e})=>{throw new Error(e._data.message)},onResponse:({response:e})=>{this.isLoading.list=!1,e.ok?this.successMessage=e._data.message:this.errorMessage=e._data.message}})},async getAllRevisions(){await a("/api/project-revisions/revisions",{method:"GET",params:this.allRevisionList.params,onRequest:()=>{this.allRevisionList.isLoading=!0},onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{this.allRevisionList.isLoading=!1,s.ok?(this.allRevisionList.list=s._data.data,this.allRevisionList.pagination={first_page:s._data.meta.first,pages:s._data.meta.links,last_page:s._data.meta.last},this.allRevisionList.successMessage=s._data.message):this.allRevisionList.errorMessage=s._data.message}})},async getRevisions(){await a(`/api/projects/${this.getParams.project_id}/revisions`,{method:"GET",onRequest:()=>{this.isLoading.list=!0},onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{this.isLoading.list=!1,s.ok?(this.list=s._data.data,this.successMessage=s._data.message):this.errorMessage=s._data.message}})},async restoreRevisions(){await a(`/api/projects/${this.getParams.project_id}/revert/${this.revisionSelected}`,{method:"PUT",onRequest:()=>{this.isLoading.list=!0},onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{this.isLoading.list=!1,s.ok?(this.list=s._data.data,this.successMessage=s._data.message):this.errorMessage=s._data.message}})},async replicateProject(){this.successMessage="",this.errorMessage="",await a("/api/projects/replicate",{method:"POST",body:this.information,watch:!1,onResponseError:({response:s})=>{throw new Error(s._data.message)},onResponse:({response:s})=>{s.ok?(this.successMessage=s._data.message,this.$reset(),this.getRevisions()):this.errorMessage=s._data.message}})},clearMessages(){this.errorMessage="",this.successMessage=""}}});export{r as u};
