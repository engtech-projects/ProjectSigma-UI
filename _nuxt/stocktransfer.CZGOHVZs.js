import{e as t,i as r}from"./CustomFetch.ggXvTdIz.js";import{l as i}from"./entry.32UGFqj-.js";const n=i("stockTransferStore",{state:()=>({stockTransfer:{isLoading:!1,isLoaded:!1,details:{},form:{},items:[],params:{project_id:null,department_id:null},list:[],pagination:{}},allRequests:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},myApprovals:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},myRequests:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{}},approvalList:{isLoading:!1,isLoaded:!1,list:[],params:{},pagination:{},errorMessage:"",successMessage:""},errorMessage:"",successMessage:"",remarks:""}),actions:{async getAllRequests(){await t("/api/stock-transfer/all-request",{method:"GET",params:this.allRequests.params,onRequest:()=>{this.allRequests.isLoading=!0},onResponse:({response:s})=>{this.allRequests.isLoading=!1,s.ok&&(this.allRequests.list=s._data.data.data,this.allRequests.pagination={first_page:s._data.data.links.first,pages:s._data.data.meta.links,last_page:s._data.data.links.last},this.allRequests.isLoaded=!0)}})},async getMyRequests(){await t("/api/material-withdrawal/my-request",{method:"GET",params:this.myRequests.params,onRequest:()=>{this.myRequests.isLoading=!0},onResponse:({response:s})=>{if(this.myRequests.isLoading=!1,s.ok)this.myRequests.isLoaded=!0,this.myRequests.list=s._data.data.data,this.myRequests.pagination={first_page:s._data.data.links.first,pages:s._data.data.meta.links,last_page:s._data.data.links.last};else throw new Error(s._data.message)}})},async getMyApprovals(){await t("/api/stock-transfer/my-approvals",{method:"GET",params:this.myApprovals.params,onRequest:()=>{this.myApprovals.isLoading=!0},onResponse:({response:s})=>{if(this.myApprovals.isLoading=!1,s.ok)this.myApprovals.isLoaded=!0,this.myApprovals.list=s._data.data.data,this.myApprovals.pagination={first_page:s._data.data.links.first,pages:s._data.data.meta.links,last_page:s._data.data.links.last};else throw new Error(s._data.message)}})},async fetchTransfers(){await t("/api/stock-transfer/resource",{method:"GET",params:this.stockTransfer.params,onRequest:()=>{this.stockTransfer.isLoading=!0},onResponse:({response:s})=>{if(this.stockTransfer.isLoading=!1,s.ok)this.stockTransfer.list=s._data.data;else throw this.errorMessage=s._data.message,new Error(s._data.message)}})},async fetchTransferDetails(s){await t("/api/stock-transfer/resource/"+s,{method:"GET",watch:!1,onRequest:()=>{this.stockTransfer.isLoading=!0},onResponse:({response:a})=>{if(this.stockTransfer.isLoading=!1,a.ok)this.stockTransfer.details=a._data.data;else throw this.errorMessage=a._data.message,new Error(a._data.message)}})},async fetchTransferByWarehouseId(s){await t("/api/stock-transfer/warehouse/"+s,{method:"GET",watch:!1,onRequest:()=>{this.stockTransfer.isLoading=!0},onResponse:({response:a})=>{if(this.stockTransfer.isLoading=!1,a.ok)this.stockTransfer.details=a._data.data;else throw this.errorMessage=a._data.message,new Error(a._data.message)}})},async storeRequest(){await r("/api/stock-transfer/resource",{method:"POST",body:{...this.stockTransfer.form,details:this.stockTransfer.details},watch:!1,onResponse:({response:s})=>{if(s.ok)this.reloadResources(),this.successMessage=s._data.message;else throw this.errorMessage=s._data.message,new Error(s._data.message)}})},async getOne(s){return await r("/api/stock-transfer/resource/"+s,{method:"GET",params:this.stockTransfer.params,onResponse:({response:a})=>{if(a.ok)return this.stockTransfer.details=a._data.data,a._data.data;throw new Error(a._data.message)}})},async approveApprovalForm(s){this.successMessage="",this.errorMessage="",await t("/api/approvals/approve/transfer/"+s,{method:"POST",onResponseError:({response:a})=>{throw this.errorMessage=a._data.message,new Error(a._data.message)},onResponse:({response:a})=>{if(a.ok)return this.successMessage=a._data.message,a._data}})},async denyApprovalForm(s){this.successMessage="",this.errorMessage="";const a=new FormData;a.append("id",s),a.append("remarks",this.remarks),await t("/api/approvals/disapprove/transfer/"+s,{method:"POST",body:a,onResponseError:({response:e})=>{throw this.errorMessage=e._data.message,new Error(e._data.message)},onResponse:({response:e})=>{if(e.ok)return this.successMessage=e._data.message,e._data}})},async acceptAllItem(s,a){this.errorMessage="",this.successMessage="",await t(`/api/stock-transfer/item/${s}/accept-all`,{method:"PATCH",body:JSON.stringify(a),watch:!1,onRequest:()=>{this.items.isLoading=!0},onResponseError:({response:e})=>{throw this.errorMessage=e._data.message,new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.successMessage=e._data.message)}})},async acceptQtyRemarks(s,a){this.errorMessage="",this.successMessage="",await t(`/api/stock-transfer/item/${s}/accept-with-details`,{method:"PATCH",body:JSON.stringify(a),watch:!1,onRequest:()=>{this.items.isLoading=!0},onResponseError:({response:e})=>{throw this.errorMessage=e._data.message,new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.successMessage=e._data.message)}})},async rejectItem(s,a){this.errorMessage="",this.successMessage="",await t(`/api/stock-transfer/item/${s}/reject`,{method:"PATCH",body:JSON.stringify(a),watch:!1,onRequest:()=>{this.items.isLoading=!0},onResponseError:({response:e})=>{throw this.errorMessage=e._data.message,new Error(e._data.message)},onResponse:({response:e})=>{e.ok&&(this.successMessage=e._data.message)}})},clearMessages(){this.errorMessage="",this.successMessage=""},reloadResources(){const s=this.approvalList.list,a=[];this.allRequests.isLoaded&&a.push(this.getAllRequests),this.myRequests.isLoaded&&a.push(this.getMyRequests),this.myApprovals.isLoaded&&a.push(this.getMyApprovals),this.$reset(),this.approvalList.list=s,a.forEach(e=>{e()})}}});export{n as u};
